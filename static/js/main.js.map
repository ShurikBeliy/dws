{"version":3,"file":"main.js","sources":["../typescript/config.ts","../typescript/utils.ts","../typescript/app.ts","../typescript/control.ts","../typescript/main.ts"],"sourcesContent":["export const config = {\n  selector: { // our selectors for different elements\n    selector:'html',\n    filter: { // our selectors for filters\n      selector:'.filter',\n      input:{ // selectors for input wrapers element\n        selector:'.filter__input',\n        checkbox:{ // selector for checkbox\n          selector: '.checkbox',\n        }\n      }\n    },\n    catalog: {\n      selector: '.catalog',\n      item: {\n        selector: '.catalog__item',\n      }\n    }\n  },\n  request: {\n    json_path: 'json/',\n    catalog: {\n      filter_name: 'filter',\n    }\n  }\n}\n","export interface CallbackOneParam<T1, T2 = void> {\n  (param: T1): T2;\n}\n\nexport async function http<T>(\n  request: RequestInfo\n): Promise<HttpResponse<T>> {\n  const response: HttpResponse<T> = await fetch(\n    request\n  );\n\n  try {\n    response.parsedBody = await response.json();\n  } catch (ex) {}\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return response;\n}\n\nexport async function get<T>(\n  path: string,\n  args: RequestInit = { method: \"get\" }\n): Promise<HttpResponse<T>> {\n  return await http<T>(new Request(path, args));\n};\n\nexport async function post<T, T1=any>(\n  path: string,\n  body: T1,\n  args: RequestInit = { method: \"post\", body: JSON.stringify(body) }\n): Promise<HttpResponse<T>>  {\n  return await http<T>(new Request(path, args));\n};\n\nexport async function put<T, T1=any>(\n  path: string,\n  body: T1,\n  args: RequestInit = { method: \"put\", body: JSON.stringify(body) }\n): Promise<HttpResponse<T>> {\n  return await http<T>(new Request(path, args));\n};\n\nexport function getCurrentUrl():string {\n  return window.location.pathname;\n}\n","import {ControlElement} from './control'\nimport {config} from './config'\nimport {get, getCurrentUrl} from './utils'\n\ntype catalogResponse = {\n  id: number,\n  html: string\n}\n\nexport class App {\n  private control:Control = null;\n\n  constructor(control:Control){\n    this.control = control;\n  }\n\n  /* Run app */\n  public run() {\n    console.log('Run app.');\n    this.control.setFilterCallback(this.runFilterCallback);\n  }\n\n  private async runFilterCallback(filters:Array<ControlElement>) {\n    let query = '';\n    let divider='';\n    // collect filters for request\n    for( const filter of filters ) {\n      if( filter.isChecked() )\n        query = `${query}${divider}${config.request.catalog.filter_name}[]=${filter.getValue()}`;\n      if( divider == '' )\n        divider = '&'\n    }\n    query = `${getCurrentUrl()}${config.request.json_path}?${query}`;\n    try {\n      let response = await get<catalogResponse>(query);\n      changeCatalog(response);\n    } catch(e) {\n      console.error(e);\n    }\n  }\n\n  private changeCatalog(catalog: catalogResponse) {\n    const catalogElement:HTMLElement = document.querySelector(`${config.selector.catalog.selector} ${config.selector.catalog.item.selector}`);\n    if(catalogElement != null)\n      catalogElement.innerHTML = catalog.html;\n  }\n}\n","import {config} from './config'\nimport {CallbackOneParam} from './utils'\n\nexport class ControlElement {\n\n  private selector:string = null;\n  private element:HTMLElement = null;\n  private filterCallbackHandler:CallbackOneParam<Array<ControlElement>> = null;\n\n  constructor(selector?:string, element?:HTMLElement) {\n    this.selector = selector!;\n    this.element = element!;\n    this.init(this.selector);\n  }\n\n  public init(selector?:string){\n    this.selector = selector!;\n    if(this.selector != null)\n      this.element = document.querySelector(this.selector) as HTMLElement;\n  }\n\n  public getElement():HTMLElement {\n    return this.element;\n  }\n}\n\nclass CheckboxElement extends ControlElement {\n\n  public init(selector?:string){\n    super.init(selector!);\n    this.getValue();\n  }\n\n  public getValue(): string | number {\n    if( this.element != null )\n      return this.element.value;\n    return \"\";\n  }\n\n  public setValue(value: string | number) {\n    if( this.element != null )\n      this.element.value = value;\n  }\n\n  public isChecked(): boolean | null {\n    if( this.element != null )\n      return this.element.checked;\n    return null;\n  }\n}\n\nexport class Control {\n\n  private controlFilterElements: Array<ControlElement> = [];\n\n  constructor(){\n    this.init();\n  }\n\n  public init(){\n    this.controlFilterElements = this.initFilter();\n    this.listenFilter();\n  }\n\n  private initFilter():Array<ControlElement> {\n    const filterSelector:string = config.selector.filter.selector;\n    const checkboxSelector:string = config.selector.filter.input.checkbox.selector;\n    const chekboxElements:Array<HTMLElement> = document.querySelectorAll(`${filterSelector} ${checkboxSelector}`);\n    let filterElements:Array<CheckboxElement> = [];\n\n    for( let element of chekboxElements ) {\n      filterElements.push(new CheckboxElement(null, element));\n    }\n\n    return filterElements;\n  }\n\n  private listenFilter() {\n    for(const filter of this.controlFilterElements)\n      filter.getElement().addEventListener(\"change\", () => this.runFilterCallback());\n  }\n\n  private runFilterCallback() {\n    if(this.filterCallbackHandler != null)\n      this.filterCallbackHandler(this.controlFilterElements);\n  }\n\n  public setFilterCallback(callback: CallbackOneParam<Array<ControlElement>>) {\n    this.filterCallbackHandler = callback;\n  }\n}\n","import {App} from './app'\nimport {Control} from './control'\n\n((): void => {\n  const control:Control = new Control();\n  const app:App = new App(control);\n  app.run();\n})();\n"],"names":[],"mappings":"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"}